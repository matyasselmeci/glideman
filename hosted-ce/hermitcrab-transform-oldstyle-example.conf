# Common

# Replace the executable in the transformed job with one of our own
HermitCrab_Pilotfile = /var/lib/condor-ce/pilot.pyz
# Use "CentOS8" if CLUSTER_CONDOR_OS is AlmaLinux8
HermitCrab_OpSysAndVer          = CentOS8

# Compat version for old job router syntax
JOB_ROUTER_ENTRIES @=jre
$(JOB_ROUTER_ENTRIES)
[
  TargetUniverse = 5;
  Requirements = (regexp("glideman", TARGET.GlideinClient?:""));
  name = "HermitCrab";

  SET_requirements = TARGET.HasDocker && (TARGET.Disk >= RequestDisk) && (TARGET.Memory >= RequestMemory) && (TARGET.Cpus >= RequestCpus) && (TARGET.HasFileTransfer && versioncmp(split(TARGET.CondorVersion)[1],"8.9.7") >= 0) \
   && (TARGET.OpSysAndVer == "$(HermitCrab_OpSysAndVer)");
  # ^^ copied from Local_Condor route, except for the OpSysAndVer requirement (added so I only need to ship one condor tarball)

  COPY_Cmd = "orig_Cmd";
  COPY_Args = "orig_Args";
  COPY_TransferInput = "orig_TransferInput";
  SET_Args = strcat("--debug ", \
                         "--watch-command glidein_startup=/glidein_startup[.]sh ", \
                         "--watch-command startd=(^|/)condor_startd ", \
                         "--watch-command starter=(^|/)condor_starter ", \
                         "--job-id=", (RoutedFromJobID?:"unknown"), \
                         " ", MY.orig_Cmd, " ", MY.orig_Args);
  SET_Cmd = "$BASENAME(HermitCrab_Pilotfile)";
  EVAL_SET_TransferInput = strcat("$(HermitCrab_Pilotfile)", ",", MY.orig_Cmd, ",", (MY.TransferInput?:""));
  SET_TransferExecutable = False;
  SET_StreamErr = True;
  SET_LeaveJobInQueue = (MY.JobStatus != 3) && (time() - MY.EnteredCurrentStatus) < 900;
  SET_RequestDisk = 1000000
]
@jre
JOB_ROUTER_ROUTE_NAMES = $(JOB_ROUTER_ROUTE_NAMES) HermitCrab
